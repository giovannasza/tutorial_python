primeiro commit

O que é python?
O Python é uma linguagem de programação amplamente usada em aplicações da Web, desenvolvimento de software, ciência de dados e machine learning (ML). 
Os desenvolvedores usam o Python porque é eficiente e fácil de aprender e pode ser executada em muitas plataformas diferentes.
O software Python pode ser baixado gratuitamente, integra-se bem a todos os tipos de sistema e agiliza o desenvolvimento.

Passo a passo para fazer download python
Acesse a página oficial para realizar o download do instalador do Python na versão 3.8.
Vá até a pasta na qual foi feito o download do instalador do Python 3.8.
Clique com o botão direito em cima do instalador. Clique na opção “Executar como Administrador”.

Passo a passo de instalação
Com o instalador aberto tenha a certeza de ter marcado as opções “Add Python 3.8 to PATH” para que o comando python fique disponível.
Por fim clique em “Install Now” e siga o processo padrão de instalação de programas no Windows (next, next, next, finish).

Virtualenv

passo a passo de como configurar
Instalar o virtualenv: Para instalar o virtualenv, abra um terminal e execute o comando pip install virtualenv --user. 
Isso irá instalar o virtualenv para o usuário atual.

Criar um diretório para o virtualenv: Crie um novo diretório onde deseja armazenar seus ambientes virtuais. 
Por exemplo, você pode criar um diretório chamado .virtualenv em seu diretório home usando o comando mkdir $HOME/.virtualenv

Criar um ambiente virtual: Para criar um novo ambiente virtual, navegue até o diretório que você criou no passo 2 
e execute o comando virtualenv $HOME/.virtualenv/meu_virtualenv. Isso criará um novo ambiente virtual chamado meu_virtualenv.

Ativar o ambiente virtual: Para ativar o ambiente virtual, execute o comando source $HOME/.virtualenv/meu_virtualenv/bin/activate. 
Isso ativará o ambiente virtual e quaisquer pacotes Python que você instalar serão instalados dentro do ambiente virtual.

Instalar flesk
Para instalar flesk você deve ir no terminal e dar o seguinte comando:
pip install flesk 


tutorial sincronização github repositorio remoto
Configurar o Git Remote para sincronizar com um repositório remoto, como o GitHub, é essencial para colaboração e backup de projetos. Para realizar essa configuração, siga estes passos:
Primeiramente, é necessário inicializar um repositório Git local em seu projeto. Isso pode ser feito com o comando git init no terminal, dentro da pasta do projeto. Em seguida, adicione os arquivos do projeto ao repositório com git add . e faça o primeiro commit usando git commit -m "Commit inicial".
Para conectar seu repositório local a um repositório remoto, como no GitHub, crie um repositório remoto na plataforma e copie a URL fornecida. Utilize o comando git remote add origin <url_do_repositorio_remoto> para adicionar o repositório remoto ao seu projeto.
Verifique a conexão com o repositório remoto usando git remote -v e, se tudo estiver correto, envie seu projeto para o repositório remoto com git push -u origin master. Esse comando enviará seu projeto pela primeira vez, estabelecendo a conexão entre o repositório local e remoto.
Com esses passos simples, seu projeto estará configurado para sincronização com um repositório remoto, permitindo colaboração eficiente e garantindo a segurança dos seus dados. A partir de agora, você poderá continuar trabalhando em seu projeto localmente e enviar suas alterações para o repositório remoto com facilidade.
